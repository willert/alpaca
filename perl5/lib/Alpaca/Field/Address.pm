# This is an autogenerated file. Do not modify!

package Alpaca::Field::Address;

use Moose;
use Types::Standard qw(:all);
BEGIN { extends 'Alpaca::Field' };

has title => (
  is => 'ro',
  traits => [qw/ AlpacaSchema /],
  description => 'Short description of the property.',
  isa => Str,
);

has description => (
  is => 'ro',
  traits => [qw/ AlpacaSchema /],
  description => 'Detailed description of the property.',
  isa => Str,
);

has readonly => (
  is => 'ro',
  traits => [qw/ AlpacaSchema /],
  description => 'Property will be readonly if true.',
  isa => Bool,
);

has required => (
  is => 'ro',
  traits => [qw/ AlpacaSchema /],
  description => 'Property value must be set if true.',
  isa => Bool,
);

has default => (
  is => 'ro',
  traits => [qw/ AlpacaSchema /],
  description => 'Default value of the property.',
  isa => Any,
);

has type => (
  is => 'ro',
  traits => [qw/ AlpacaSchema /],
  description => 'Data type of the property.',
  isa => Str,
  default => 'any',
);

has format => (
  is => 'ro',
  traits => [qw/ AlpacaSchema /],
  description => 'Data format of the property.',
  isa => Str,
);

has disallow => (
  is => 'ro',
  traits => [qw/ AlpacaSchema /],
  description => 'List of disallowed values for the property.',
  isa => ArrayRef,
);

has dependencies => (
  is => 'ro',
  traits => [qw/ AlpacaSchema /],
  description => 'List of property dependencies.',
  isa => ArrayRef,
);

has properties => (
  is => 'ro',
  traits => [qw/ AlpacaSchema /],
  description => 'List of child properties.',
  isa => Object,
);

has maxProperties => (
  is => 'ro',
  traits => [qw/ AlpacaSchema /],
  description => 'The maximum number of properties that this object is allowed to have',
  isa => Num,
);

has minProperties => (
  is => 'ro',
  traits => [qw/ AlpacaSchema /],
  description => 'The minimum number of properties that this object is required to have',
  isa => Num,
);

has fields => (
  is => 'ro',
  traits => [qw/ AlpacaOption /],
  description => 'List of options for child fields.',
  isa => Object,
);

has validateAddress => (
  is => 'ro',
  traits => [qw/ AlpacaOption /],
  description => 'Enable address validation if true',
  isa => Bool,
  default => 1,
);

has showMapOnLoad => (
  is => 'ro',
  traits => [qw/ AlpacaOption /],
  isa => Bool,
);



__PACKAGE__->meta->make_immutable;
no Moose;

1;
